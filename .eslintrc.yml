rules:
  accessor-pairs: error
  array-bracket-spacing: [error, never]
  array-callback-return: error
  arrow-parens: [error, as-needed]
  arrow-spacing: error
  block-spacing: [error, never]
  brace-style: error
  comma-dangle: error
  comma-spacing: error
  comma-style: error
  computed-property-spacing: error
  curly: [error, multi-line]
  dot-notation: error
  dot-location: [error, property]
  eol-last: error
  eqeqeq: error
  func-call-spacing: error
  indent: [error, 2, {FunctionDeclaration: {body: 1, parameters: 1}, FunctionExpression: {body: 1, parameters: 1}, CallExpression: {arguments: 1}, SwitchCase: 1, MemberExpression: 1}]
  key-spacing: error
  keyword-spacing: error
  max-statements-per-line: error
  new-parens: error
  no-caller: error
  no-catch-shadow: error
  no-console: error
  no-dupe-class-members: off
  no-duplicate-imports: off
  no-else-return: error
  no-eval: error
  no-extra-bind: error
  no-extra-label: error
  no-extra-parens: off
  no-floating-decimal: error
  no-global-assign: error
  no-implied-eval: error
  no-label-var: error
  no-lone-blocks: error
  no-lonely-if: error
  no-mixed-operators: error
  no-multi-spaces: error
  no-new: error
  no-new-func: error
  no-new-object: error
  no-new-require: error
  no-octal-escape: error
  no-proto: error
  no-prototype-builtins: error
  no-redeclare: off
  no-restricted-properties: [error, {object: describe, property: only}, {object: it, property: only}]
  no-script-url: error
  no-self-compare: error
  no-sequences: error
  no-shadow: error
  no-tabs: error
  no-template-curly-in-string: error
  no-trailing-spaces: error
  no-undef: off # TypeScript will handle this
  no-unneeded-ternary: error
  no-unsafe-negation: error
  no-unused-expressions: error
  no-unused-vars: off
  no-useless-call: error
  no-useless-computed-key: error
  no-useless-concat: error
  no-useless-constructor: error
  no-useless-escape: error
  no-useless-return: error
  no-whitespace-before-property: error
  no-var: error
  no-void: error
  no-with: error
  object-curly-spacing: error
  object-shorthand: error
  operator-assignment: error
  padded-blocks: [error, never]
  prefer-arrow-callback: error
  prefer-const: error
  prefer-numeric-literals: error
  prefer-rest-params: error
  prefer-spread: error
  quote-props: [error, as-needed]
  quotes: [error, single, avoid-escape]
  # semi: [error, never]
  # semi-spacing: error
  space-before-blocks: error
  space-before-function-paren: error
  space-in-parens: error
  space-infix-ops: error
  space-unary-ops: error
  spaced-comment: error
  strict: [error, global]
  template-curly-spacing: error
  unicode-bom: error
  valid-typeof: [error, {requireStringLiterals: true}]
  wrap-iife: error
  yoda: error
  import/prefer-default-export: error
  import/newline-after-import: error
  import/no-unassigned-import: error
  promise/catch-or-return: error
  promise/no-return-wrap: error
  promise/param-names: error
  '@typescript-eslint/consistent-type-imports': error
  '@typescript-eslint/no-dupe-class-members': error
  '@typescript-eslint/no-duplicate-imports': error
  '@typescript-eslint/no-extra-parens': [error, all, {nestedBinaryExpressions: false}]
  '@typescript-eslint/no-redeclare': error
  '@typescript-eslint/no-unused-vars': error

extends:
  - eslint:recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript

plugins:
  - import
  - promise
  - '@typescript-eslint'

root: true

parser: "@typescript-eslint/parser"

parserOptions:
  ecmaVersion: 2017
  sourceType: module
  ecmaFeatures:
    experimentalObjectRestSpread: true

env:
  node: true
  es6: true
  browser: true
